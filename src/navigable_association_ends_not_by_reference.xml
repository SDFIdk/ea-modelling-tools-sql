<?xml  version='1.0' encoding='UTF-8' ?>
<RootSearch><Search Name="navigable_association_ends_not_by_reference" GUID="{294A462A-E312-46f8-9C33-8A38A560DB0B}" PkgGUID="-1" Type="0" LnksToObj="0" CustomSearch="1" AddinAndMethodName=""><SrchOn><RootTable Filter="SELECT&#xA;    c.ea_guid AS CLASSGUID,&#xA;    c.connector_type AS CLASSTYPE,&#xA;    't_connector' AS CLASSTABLE,&#xA;    o_start.name AS start_classifier_name,&#xA;    c.name AS association_name,&#xA;    c.destrole AS end_classifier_role,&#xA;    o_end.name AS end_classifier_name&#xA;FROM&#xA;    (t_connector c&#xA;INNER JOIN t_object o_start ON&#xA;    c.start_object_id = o_start.object_id)&#xA;INNER JOIN t_object o_end ON&#xA;    c.end_object_id = o_end.object_id&#xA;WHERE&#xA;    ((o_start.package_id IN (#Branch#)&#xA;        AND o_end.package_id IN (#Branch#)&#xA;            AND c.connector_type = 'Association')&#xA;    OR (o_start.package_id IN (#Branch#)&#xA;        AND c.connector_type = 'Association'))&#xA;    AND c.direction IN ('Source -&gt; Destination', 'Bi-Directional')&#xA;    AND (NOT EXISTS (&#xA;    SELECT&#xA;        *&#xA;    FROM&#xA;        t_taggedvalue tv&#xA;    WHERE&#xA;        tv.elementid = c.ea_guid&#xA;        AND tv.baseclass = 'ASSOCIATION_TARGET'&#xA;        AND tv.tagvalue = 'inlineOrByReference')&#xA;    OR (&#xA;    SELECT&#xA;        notes&#xA;    FROM&#xA;        t_taggedvalue tv&#xA;    WHERE&#xA;        tv.elementid = c.ea_guid&#xA;        AND tv.baseclass = 'ASSOCIATION_TARGET'&#xA;        AND tv.tagvalue = 'inlineOrByReference') &lt;&gt; 'byReference')&#xA;UNION ALL&#xA;SELECT&#xA;    c.ea_guid,&#xA;    c.connector_type,&#xA;    't_connector',&#xA;    o_end.name,&#xA;    c.name,&#xA;    c.sourcerole AS end_classifier_role,&#xA;    o_start.name&#xA;FROM&#xA;    (t_connector c&#xA;INNER JOIN t_object o_start ON&#xA;    c.start_object_id = o_start.object_id)&#xA;INNER JOIN t_object o_end ON&#xA;    c.end_object_id = o_end.object_id&#xA;WHERE&#xA;    ((o_start.package_id IN (#Branch#)&#xA;        AND o_end.package_id IN (#Branch#)&#xA;            AND c.connector_type = 'Association')&#xA;    OR (o_start.package_id IN (#Branch#)&#xA;        AND c.connector_type = 'Association'))&#xA;    AND c.direction IN ('Destination -&gt; Source', 'Bi-Directional')&#xA;    AND (NOT EXISTS (&#xA;    SELECT&#xA;        *&#xA;    FROM&#xA;        t_taggedvalue tv&#xA;    WHERE&#xA;        tv.elementid = c.ea_guid&#xA;        AND tv.baseclass = 'ASSOCIATION_SOURCE'&#xA;        AND tv.tagvalue = 'inlineOrByReference')&#xA;    OR (&#xA;    SELECT&#xA;        notes&#xA;    FROM&#xA;        t_taggedvalue tv&#xA;    WHERE&#xA;        tv.elementid = c.ea_guid&#xA;        AND tv.baseclass = 'ASSOCIATION_SOURCE'&#xA;        AND tv.tagvalue = 'inlineOrByReference') &lt;&gt; 'byReference');&#xA;#DB=COMMENT# Find the navigable association ends that don't have value inlineOrByReference set to byReference. Aggregations and compositions are not considered in this query. #DB=COMMENT#" Type="-1"><TableName Display="Custom SQL Search" Name=""/><TableHierarchy Display="" Hierarchy=""/></RootTable></SrchOn><LnksTo/></Search></RootSearch>