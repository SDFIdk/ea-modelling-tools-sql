<?xml  version='1.0' encoding='UTF-8' ?>
<RootSearch><Search Name="attributes_with_conflicting_type" GUID="{E66A6DD7-0140-4105-876D-7527306A28B1}" PkgGUID="-1" Type="0" LnksToObj="0" CustomSearch="1" AddinAndMethodName=""><SrchOn><RootTable Filter="select a.ea_guid as classguid, 'Attribute' as classtype, p.name as package_name, o.name as classifier_name, a.name as attribute_name, a.type as type_name, a.classifier as type_id&#xA;from (((t_attribute a inner join t_object o on o.object_id = a.object_id) inner join t_package p on p.package_id = o.package_id)) inner join t_object o2 on o2.object_id = a.classifier &#xA;where o.package_id in (#Branch#) and o.object_type in ('Class', 'DataType', 'Interface') and (a.classifier is not null and a.type != o2.name)&#xA;order by p.name, o.name&#xA;#DB=COMMENT# Find the attributes that have a conflicting type, where the name of the attribute type is not equal to the name of the classifier that is specified as the type. This can for example happen when first a classifier was chosen as type in the dropdown, and then &lt;none&gt; was chosen as type in the drop-down. To resolve this, change the type to a data type defined by the language of the element (in the dropdown) and then change again to &lt;none&gt;. #DB=COMMENT#" Type="-1"><TableName Display="Custom SQL Search" Name=""/><TableHierarchy Display="" Hierarchy=""/></RootTable></SrchOn><LnksTo/></Search></RootSearch>